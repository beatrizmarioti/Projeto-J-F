package com.bea.projetojef.ui;

import android.content.Context;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

import com.bea.projetojef.Administrador;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.android.material.textfield.TextInputLayout;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.EventListener;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.FirebaseFirestoreException;
import com.google.firebase.firestore.QuerySnapshot;
import com.bea.projetojef.Cracha;

public class Database {
    public Database() {

    }
    public void salvarCracha(Context context, TextInputLayout nomeInput, TextInputLayout numeroInput) {
        FirebaseFirestore db = FirebaseFirestore.getInstance();

        String cracha = numeroInput.getEditText().getText().toString().trim();
        String nome = nomeInput.getEditText().getText().toString().trim();

        if (nome.isEmpty() || cracha.isEmpty()) {
            Toast.makeText(context, "Bixo leso, coloca todos os campos", Toast.LENGTH_SHORT).show();
            return;
        }

        db.collection("colaborador").document("id_cracha").get().addOnCompleteListener(task -> {
            if (task.isSuccessful()) {
                int novoId = 1;

                DocumentSnapshot doc = task.getResult();
                if (doc.exists()) {
                    Long ultimoId = doc.getLong("id");
                    if (ultimoId != null) {
                        novoId = ultimoId.intValue() + 1;
                    }
                }
                final int idParaSalvar = novoId;

                // Criar novo crachá
                Cracha registroCracha = new Cracha();
                registroCracha.setId(idParaSalvar);
                registroCracha.setNome(nome);
                registroCracha.setCracha(cracha);
                registroCracha.setInicio("");
                registroCracha.setTermino("");

                // Salvar o crachá com ID novo
                db.collection("colaborador").document(String.valueOf(idParaSalvar))
                        .set(registroCracha)
                        .addOnSuccessListener(aVoid -> {
                            // Atualizar contador de IDs
                            db.collection("colaborador").document("id_cracha")
                                    .update("id", idParaSalvar);

                            Toast.makeText(context, "Crachá registrado com sucesso!", Toast.LENGTH_SHORT).show();
                        })
                        .addOnFailureListener(e -> {
                                Toast.makeText(context, "Não foi possível registrar crachá", Toast.LENGTH_SHORT).show();
                                System.out.println(e.getMessage());
                            }
                        );

            } else {
                Toast.makeText(context, "Erro ao gerar ID: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
            }
        });

        db.collection("admin").addSnapshotListener(new EventListener<QuerySnapshot>() {
            @Override
            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {
                if (error != null) {
                    System.out.println("Deu ruim" + error.getMessage());
                    return;
                }
//                listaNota.clear();
//                for (DocumentSnapshot doc : value.getDocuments()) {
//                    Nota objNota = doc.toObject(Nota.class);
//                    listaNota.add(objNota);
//                    binding.rv.getAdapter().notifyDataSetChanged();
//                }
            }

        });
    }

    public void remover(Context c, Administrador argAdmin) {
        // Abrir banco de dados
        FirebaseFirestore db = FirebaseFirestore.getInstance();
        db.collection("ListaNotas").document(String.valueOf(argNota.getId())).delete().addOnSuccessListener(new OnSuccessListener<Void>() {
            @Override
            public void onSuccess(Void unused) {
                Toast.makeText(c, "Removido com sucesso", Toast.LENGTH_SHORT).show();
            }
        });
    }

}
